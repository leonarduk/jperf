<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>net.jperf</groupId>
    <artifactId>jperf</artifactId>
    <version>1.0.4-SNAPSHOT</version>
    <packaging>bundle</packaging>

    <name>JPerf</name>
    <description>Performance statistics logging and monitoring toolkit extension to log4j, logback and the java.util.logging framework.</description>
    <url>http://github.com/sovaa/jperf</url>
    <inceptionYear>2008</inceptionYear>

    <licenses>
        <license>
            <name>Apache 2</name>
            <url>LICENSE.txt</url>
            <distribution>repo</distribution>
            <comments>A business-friendly OSS license</comments>
        </license>
    </licenses>

    <parent>
        <groupId>org.sonatype.oss</groupId>
        <artifactId>oss-parent</artifactId>
        <version>7</version>
    </parent>

    <organization>
        <name>jperf</name>
        <url>http://github.com/sovaa/jperf</url>
    </organization>

    <issueManagement>
        <system>GitHub Issues</system>
        <url>https://github.com/sovaa/jperf/issues</url>
    </issueManagement>

    <developers>
        <developer>
            <id>scorch</id>
            <name>Oscar Eriksson</name>
            <email>oscar.eriks@gmail.com</email>
            <timezone>+8</timezone>
            <roles>
                <role>despot</role>
                <role>developer</role>
            </roles>
        </developer>
    </developers>

    <scm>
        <url>https://github.com/sovaa/jperf</url>
        <connection>scm:git:git://github.com/sovaa/jperf.git</connection>
        <developerConnection>scm:git:git@github.com:sovaa/jperf.git</developerConnection>
      <tag>HEAD</tag>
  </scm>

    <properties>
        <!-- this property is used by the apt files in src/site/apt -->
        <currentProductionVersion>1.0.3</currentProductionVersion>
        <currentSnapshotVersion>1.0.4-SNAPSHOT</currentSnapshotVersion>
        <git.executable>git</git.executable>
        <aspectjVersion>1.6.11</aspectjVersion>
        <!-- when building with java 8 -->
        <additionalparam>-Xdoclint:none</additionalparam>
        <github.global.server>github.sovaa.jperf.ghpages</github.global.server>
    </properties>

    <dependencies>
        <!-- if you use the log4j implementation of jperf, you must also include this dependency -->
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.14</version>
            <scope>compile</scope>
            <optional>true</optional>
        </dependency>

        <!-- if you use the commons logging code (in the commonslog package), you must also include this dependency -->
        <dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
            <version>1.0.3</version>
            <scope>compile</scope>
            <optional>true</optional>
        </dependency>

        <!-- if you use the slf4j logging code, you must also include this dependency -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.5.6</version>
            <scope>compile</scope>
            <optional>true</optional>
        </dependency>

        <!-- if you use logback as slf4j impl, you must also include this dependency -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>0.9.15</version>
            <scope>compile</scope>
            <optional>true</optional>
        </dependency>

        <!-- If you use the graphing servlets of jperf, the servlet package should be provided by your container -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <version>2.4</version>
            <scope>provided</scope>
        </dependency>

        <!-- if you use the Aspect-J based AOP functionality, you must also include these following dependencies -->
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjrt</artifactId>
            <version>${aspectjVersion}</version>
            <scope>compile</scope>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjweaver</artifactId>
            <version>${aspectjVersion}</version>
            <scope>compile</scope>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>commons-jexl</groupId>
            <artifactId>commons-jexl</artifactId>
            <version>1.1</version>
            <scope>compile</scope>
            <optional>true</optional>
        </dependency>

        <!--
            if you use EJB Interceptors, you DON'T need to include the following dependency as the required
            classes shouldcome with your Java EE server
        -->
        <dependency>
            <groupId>javax.ejb</groupId>
            <artifactId>ejb-api</artifactId>
            <version>3.0</version>
            <scope>provided</scope>
        </dependency>

        <!-- if you use Spring to manage the AOP funcionality, you must also include these following dependencies -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring</artifactId>
            <version>2.0.6</version>
            <scope>compile</scope>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>cglib</groupId>
            <artifactId>cglib</artifactId>
            <version>2.1_3</version>
            <scope>compile</scope>
            <optional>true</optional>
        </dependency>

        <!-- The following dependencies are required for testing only -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.13.1</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <version>1.9.5</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-mock</artifactId>
            <version>2.0.6</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>commons-httpclient</groupId>
            <artifactId>commons-httpclient</artifactId>
            <version>3.1</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>1.3.2</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <!-- for surefire reports -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jxr-plugin</artifactId>
                    <version>2.5</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-report-plugin</artifactId>
                    <version>2.18</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>2.10.1</version>
                </plugin>
                <plugin>
                    <groupId>com.github.github</groupId>
                    <artifactId>site-maven-plugin</artifactId>
                    <version>0.10</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <!-- Tell Maven to compile for Java 1.6 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.3.2</version>
                <configuration>
                    <source>1.6</source>
                    <target>1.6</target>
                </configuration>
            </plugin>

            <!-- need to use later version of release plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <version>2.5.1</version>
            </plugin>

            <!-- When deploying tell Maven not to create unique binaries for each snapshot -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>2.7</version>
                <inherited>true</inherited>
                <configuration>
                    <uniqueVersion>false</uniqueVersion>
                </configuration>
            </plugin>

            <!-- Set up code coverage -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>emma-maven-plugin</artifactId>
                <version>1.0-alpha-1</version>
                <inherited>true</inherited>
            </plugin>

            <!-- Genearate a javadoc jar when deploying -->
            <plugin>
                <artifactId>maven-javadoc-plugin</artifactId>
                <inherited>true</inherited>
                <configuration>
                    <links>
                        <link>http://java.sun.com/j2se/1.5.0/docs/api</link>
                        <link>http://logging.apache.org/log4j/1.2/apidocs</link>
                        <link>http://commons.apache.org/logging/apidocs</link>
                        <link>http://www.slf4j.org/api</link>
                    </links>
                    <charset>UTF-8</charset>
                </configuration>
                <executions>
                    <execution>
                        <phase>verify</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                        <configuration>
                            <attach>true</attach>
                        </configuration>
                    </execution>
                </executions>
            </plugin>


		   
            <!-- Generate a jar containing the source files when deploying -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>2.1.2</version>
                <inherited>true</inherited>
                <executions>
                    <execution>
                        <phase>verify</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                        <configuration>
                            <attach>true</attach>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Tell maven to generate a version.properties files from SVN -->
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>build-versions-file</id>
                        <phase>compile</phase>
                        <inherited>false</inherited>
                        <configuration>
                            <tasks>
                                <mkdir dir="${project.build.directory}" />
                                <exec executable="${git.executable}" output="${project.build.directory}/version.properties">
                                    <arg value="log" />
                                    <arg value="-1" />
                                    <arg value="--pretty=jperf.revision=%H" />
                                </exec>
                                <echo file="${project.build.directory}/version.properties" append="true">
                                    jperf.version=${project.version}
                                </echo>
                                <fixcrlf srcdir="${project.build.directory}" eol="lf" includes="version.properties" />
                            </tasks>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!--
              Tell the Maven bundle plugin to generate multiple jars: one with all the files, then ones that JUST contain
              the particular logging framework extensions (e.g. log4j, java.util.logging, commons logging or slf4j).
              These separate log4j, javalog, commonslog and slf4j jars are needed when using the AspectJ compiler so
              that only ONE TimingAspect is included.
				
              Also, tell the plugin to make org.per4j.LogParser the main executable class.
              
              All jars are OSGi-enabled.
            -->
			<plugin>
		        <groupId>org.apache.felix</groupId>
		        <artifactId>maven-bundle-plugin</artifactId>
		        <version>3.0.1</version>
		        <extensions>true</extensions>
		        <configuration>
                    <archive>
                        <manifest>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                            <mainClass>net.jperf.LogParser</mainClass>
                        </manifest>
                    </archive>               
                </configuration>
		        <executions>
		           <execution>
				      <id>AlljAspects</id>
				      <phase>package</phase>
				      <goals>    
				        <goal>bundle</goal>
				      </goals>
				      <configuration>
				         <!-- Instructions for default bundle -->
				          <instructions>
				            <Import-Package>
				                 org.slf4j;provider=paxlogging;resolution:=optional,
				                 *;resolution:=optional
				            </Import-Package>
				            <Export-Package>
				                  net.jperf,		                                                   
		                          net.jperf.*
				           </Export-Package>     
				          </instructions>
		        	  </configuration> 
				    </execution>
				    <execution>
				      <id>slf4jAspects</id>
				      <phase>package</phase>
				      <goals>    
				        <goal>bundle</goal>
				      </goals>
				      <configuration>
				          <classifier>slf4jonly</classifier>
				          <instructions>
				            <Bundle-Name>JPerf slf4j</Bundle-Name>
				            <Import-Package>
				                 org.slf4j;provider=paxlogging;resolution:=mandatory,
				                 *;resolution:=optional
				            </Import-Package>
				            <Export-Package>		              
				                 !net.jperf.log4j.*,
		                         !net.jperf.javalog.*,
		                         !net.jperf.commonslog.*,
		                         !net.jperf.logback.*,                                      
		                          net.jperf.*
				           </Export-Package>
				           <Private-Package>		              
				                 !net.jperf.log4j.*,
		                         !net.jperf.javalog.*,
		                         !net.jperf.commonslog.*,
		                         !net.jperf.logback.*       
				           </Private-Package>      
				          </instructions>
		        		</configuration> 
				    </execution>
				    <execution>
				      <id>log4jAspects</id>
				      <phase>package</phase>
				      <goals>    
				        <goal>bundle</goal>
				      </goals>
				      <configuration>
				          <classifier>log4jonly</classifier>
				          <instructions>
				            <Bundle-Name>JPerf log4j</Bundle-Name>
				            <Import-Package>
				                 org.apache.log4j.*;resolution:=mandatory,
				                 *;resolution:=optional
				            </Import-Package>
				            <Export-Package>		              
				                 !net.jperf.slf4j.*,
		                         !net.jperf.javalog.*,
		                         !net.jperf.commonslog.*,
		                         !net.jperf.logback.*,                                      
		                          net.jperf.*
				           </Export-Package>
				           <Private-Package>		              
				                 !net.jperf.slf4j.*,
		                         !net.jperf.javalog.*,
		                         !net.jperf.commonslog.*,
		                         !net.jperf.logback.*       
				           </Private-Package>      
				          </instructions>
		        		</configuration> 
				    </execution>
				    <execution>
				      <id>javalogAspects</id>
				      <phase>package</phase>
				      <goals>    
				        <goal>bundle</goal>
				      </goals>
				      <configuration>
				          <classifier>javalogonly</classifier>
				          <instructions>
				            <Bundle-Name>JPerf javalog</Bundle-Name>
				            <Import-Package>
				            	 *;resolution:=optional
				            </Import-Package>
				            <Export-Package>		              
				                 !net.jperf.log4j.*,
		                         !net.jperf.slf4j.*,
		                         !net.jperf.commonslog.*,
		                         !net.jperf.logback.*,                                      
		                          net.jperf.*
				           </Export-Package>
				           <Private-Package>		              
				                 !net.jperf.log4j.*,
		                         !net.jperf.slf4j.*,
		                         !net.jperf.commonslog.*,
		                         !net.jperf.logback.*       
				           </Private-Package>      
				          </instructions>
		        		</configuration> 
				    </execution>
				    <execution>
				      <id>commonslogAspects</id>
				      <phase>package</phase>
				      <goals>    
				        <goal>bundle</goal>
				      </goals>
				      <configuration>
				          <classifier>commonslogjonly</classifier>
				          <instructions>
				            <Bundle-Name>JPerf commonslog</Bundle-Name>
				            <Import-Package>
				                 org.apache.commons.logging.*;resolution:=mandatory,
				                 *;resolution:=optional
				            </Import-Package>
				            <Export-Package>		              
				                 !net.jperf.log4j.*,
		                         !net.jperf.javalog.*,
		                         !net.jperf.slf4j.*,
		                         !net.jperf.logback.*,                                      
		                          net.jperf.*
				           </Export-Package>
				           <Private-Package>		              
				                 !net.jperf.log4j.*,
		                         !net.jperf.javalog.*,
		                         !net.jperf.slf4j.*,
		                         !net.jperf.logback.*       
				           </Private-Package>      
				          </instructions>
		        		</configuration> 
				    </execution>
				    <execution>
				      <id>logbackAspects</id>
				      <phase>package</phase>
				      <goals>    
				        <goal>bundle</goal>
				      </goals>
				      <configuration>
				          <classifier>logbackonly</classifier>
				          <instructions>
				            <Bundle-Name>JPerf logback</Bundle-Name>
				            <Import-Package>
				            	 ch.qos.logback.*;resolution:=mandatory,
				            	 *;resolution:=optional
				            </Import-Package>
				            <Export-Package>		              
				                 !net.jperf.log4j.*,
		                         !net.jperf.javalog.*,
		                         !net.jperf.commonslog.*,
		                         !net.jperf.slf4j.*,                                      
		                          net.jperf.*
				           </Export-Package>
				           <Private-Package>		              
				                 !net.jperf.log4j.*,
		                         !net.jperf.javalog.*,
		                         !net.jperf.commonslog.*,
		                         !net.jperf.slf4j.*       
				           </Private-Package>      
				          </instructions>
		        		</configuration> 
				    </execution>
				</executions>
		        
		      </plugin> 
            <!-- Tell surefire which tests to run, and to fork once when running, and set system properties. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.19.1</version>
                <inherited>true</inherited>
                <configuration>
                    <forkMode>once</forkMode>
                    <reportFormat>plain</reportFormat>
                    <trimStackTrace>false</trimStackTrace>
                    <includes>
                        <include>**/*Test.java</include>
                    </includes>
                    <argLine>-javaagent:${settings.localRepository}/org/aspectj/aspectjweaver/${aspectjVersion}/aspectjweaver-${aspectjVersion}.jar -Duser.language=en -Duser.country=US</argLine>
                    <systemProperties>
                        <property>
                            <name>log4j.debug</name>
                            <value>false</value>
                        </property>
                    </systemProperties>
                </configuration>
            </plugin>

            <!-- For the the jperf site generation -->
            <plugin>
                <groupId>com.github.github</groupId>
                <artifactId>site-maven-plugin</artifactId>
                <configuration>
                    <message>Creating site for ${currentProductionVersion}</message>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>site</goal>
                        </goals>
                        <phase>site</phase>
                    </execution>
                </executions>
            </plugin>

            <!-- sign built artifacts -->
            <!--plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-gpg-plugin</artifactId>
                <version>1.5</version>
                <executions>
                    <execution>
                        <id>sign-artifacts</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>sign</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin-->

            <!-- for deploying and making releases on OSSRH -->
            <plugin>
                <groupId>org.sonatype.plugins</groupId>
                <artifactId>nexus-staging-maven-plugin</artifactId>
                <version>1.6.3</version>
                <extensions>true</extensions>
                <configuration>
                    <serverId>ossrh</serverId>
                    <nexusUrl>https://oss.sonatype.org/</nexusUrl>
                    <autoReleaseAfterClose>true</autoReleaseAfterClose>
                </configuration>
            </plugin>
        </plugins>

        <!--extensions>
            <extension>
                <groupId>org.apache.maven.wagon</groupId>
                <artifactId>wagon-webdav</artifactId>
                <version>1.0-beta-2</version>
            </extension>
        </extensions-->
    </build>

    <reporting>
        <plugins>
            <!-- Add the javadoc to the reporting section in the maven site -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>2.10.1</version>
                <configuration>
                    <attach>true</attach>
                    <links>
                        <link>http://java.sun.com/j2se/1.5.0/docs/api</link>
                        <link>http://logging.apache.org/log4j/1.2/apidocs</link>
                        <link>http://commons.apache.org/logging/apidocs</link>
                        <link>http://www.slf4j.org/api</link>
                    </links>
                </configuration>
                <inherited>true</inherited>
            </plugin>

            <!-- Add the code coverage reports to the site -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>emma-maven-plugin</artifactId>
                <version>1.0-alpha-1</version>
            </plugin>

            <!-- Add the test results to the site -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <version>2.18</version>
                <configuration>
                    <forkCount>5</forkCount>
                    <reuseForks>true</reuseForks>
                    <argLine>-Xmx512m</argLine>
                </configuration>
            </plugin>

            <!-- Create a javadoc-style source reference on the site -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jxr-plugin</artifactId>
                <version>2.5</version>
            </plugin>
        </plugins>
    </reporting>

    <profiles>
    <profile>
        <id>release-sign-artifacts</id>
        <activation>
            <property>
                <name>performRelease</name>
                <value>true</value>
            </property>
        </activation>
        <build>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-gpg-plugin</artifactId>
                    <version>1.5</version>
                    <executions>
                        <execution>
                            <id>sign-artifacts</id>
                            <phase>verify</phase>
                            <goals>
                                <goal>sign</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </build>
    </profile>
    </profiles>

    <distributionManagement>
        <snapshotRepository>
            <id>ossrh-snapshot</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
        </snapshotRepository>
        <repository>
            <id>ossrh</id>
            <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
        </repository>
    </distributionManagement>
</project>
